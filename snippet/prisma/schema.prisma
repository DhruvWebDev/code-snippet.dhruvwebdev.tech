generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String                @id @default(uuid()) @db.Uuid
  email     String                @unique
  username  String
  password  String
  role      Role                  @default(USER)
  createdAt DateTime              @default(now())
  updatedAt DateTime              @updatedAt
  favorites UserFavoriteSnippet[]

    @@unique([username, id]) // Add this constraint to enforce unique combination of username and id

}

model Admin {
  id        String    @id @default(uuid())
  email     String    @unique
  username  String
  password  String
  role      Role      @default(ADMIN)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  snippets  Snippet[]
}

model Snippet {
  id        String   @id @default(uuid())
  title     String
  content   String
  language  String
  tags      String[]
  authorId  String   @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isPublic  Boolean  @default(true)
  author    Admin    @relation(fields: [authorId], references: [id])
}

model UserFavoriteSnippet {
  id        String @id @default(uuid()) @db.Uuid
  userId    String @default(uuid()) @db.Uuid
  snippetId String @default(uuid()) @db.Uuid
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, snippetId])
}

enum Role {
  USER
  ADMIN
}
